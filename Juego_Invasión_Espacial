import pygame
import random
import math
from pygame import mixer

# Se inicializa pygame
pygame.init()

# Variable para config display
pantalla = pygame.display.set_mode((800,600))

# Titulo e icono de la pantalla
pygame.display.set_caption('Los extraterrestres pelotudos')
icono = pygame.image.load('ovni.png')
pygame.display.set_icon(icono)
fondo = pygame.image.load('fondo.jpg')

# Agregar musica
mixer.music.load('MusicaFondo.mp3')
mixer.music.set_volume(0.3)
mixer.music.play(-1)

# Variables del jugador
jugador_image = pygame.image.load('astronave.png')
jugador_x = 368
jugador_y = 500
jugador_x_cambio = 0

# Variables del enemigo
enemigo_image = []
enemigo_x = []
enemigo_y = []
enemigo_x_cambio = []
enemigo_y_cambio = []
cantidad_enemigos = 6

for e in range(cantidad_enemigos):
    enemigo_image.append(pygame.image.load('enemigo.png'))
    enemigo_x.append(random.randint(0, 736))
    enemigo_y.append(random.randint(50, 200))
    enemigo_x_cambio.append(.3)
    enemigo_y_cambio.append(50)

# Variables del misil
misil_image = pygame.image.load('misil.png')
misil_x = 0
misil_y = 500
misil_x_cambio = 0
misil_y_cambio = 2
misil_visible = False

# Puntaje
puntaje = 0
fuente = pygame.font.Font('freesansbold.ttf', 32)
texto_x = 10
texto_y = 10

# Texto final del juego
fuente_final = pygame.font.Font('freesansbold.ttf', 40)

def texto_final():
    mi_fuente_final = fuente_final.render('JUEGO TERMINADO', True, (255,255,255))
    pantalla.blit(mi_fuente_final, (60, 200))

# Funcion mostrar puntaje
def mostrar_puntaje(x, y):
    texto = fuente.render(f'Puntaje: {puntaje}', True, (255, 255, 255))
    pantalla.blit(texto, (x, y))

# Metodo para mostrar jugador
def jugador(x, y):
    pantalla.blit(jugador_image, (x, y))

# Metodo para mostrar enemigo
def enemigo(x, y, ene):
    pantalla.blit(enemigo_image[ene], (x, y))
    
# Metodo para mostrar misil
def disparar_misil(x, y):
    global  misil_visible
    misil_visible = True
    pantalla.blit(misil_image, (x, y + 20))

#Calcular distancia entre objetos
def hay_colision(x_1, y_2, y_1, x_2):
    distancia = math.sqrt(math.pow(x_1 - x_2, 2) + math.pow(y_2 - y_1, 2))
    if distancia < 27:
        return True
    else:
        return False

# Ciclo while donde se comprueban eventos
en_ejecucion = True
while en_ejecucion:

    # Establecer fondo de pantalla
    pantalla.blit(fondo, (0,0))

    # Ciclo for comprueba eventos
    for evento in pygame.event.get():
        
        # Salir del juego
        if evento.type == pygame.QUIT:
            en_ejecucion = False
        
        # Eventos al presionar teclas
        if evento.type == pygame.KEYDOWN:
            if evento.key == pygame.K_LEFT:
                jugador_x_cambio = -.3
            if evento.key == pygame.K_RIGHT:
                jugador_x_cambio = .3
            if evento.key == pygame.K_SPACE:
                sonido_misil = mixer.Sound('disparo.mp3')
                sonido_misil.play()
                # Seguir disparando misiles
                if not misil_visible:
                    misil_x = jugador_x
                    disparar_misil(misil_x, misil_y)
        if evento.type == pygame.KEYUP:
            if evento.key == pygame.K_LEFT or evento.key == pygame.K_RIGHT:
                jugador_x_cambio = 0
            
    # Modificar posicion de jugador
    jugador_x += jugador_x_cambio
    
    # Mantener jugador dentro de bordes
    if jugador_x <= 0:
        jugador_x = 0
    elif jugador_x >= 736:
        jugador_x = 736
    
    # Modificar posicion de enemigo
    for e in range(cantidad_enemigos):
        # Fin del juego
        if enemigo_y[e] > 500:
            for k in range(cantidad_enemigos):
                enemigo_y[k] = 1000
            texto_final()
            break
        
        enemigo_x[e] += enemigo_x_cambio[e]
    
    # Mantener enemigo dentro de bordes
        if enemigo_x[e] <= 0:
            enemigo_x_cambio[e] = 0.3
            enemigo_y[e] += enemigo_y_cambio[e]
        elif enemigo_x[e] >= 736:
            enemigo_x_cambio[e] = -0.3
            enemigo_y[e] += enemigo_y_cambio[e]
        
    # Comprobar colision
        colision = hay_colision(enemigo_x[e], enemigo_y[e], misil_x, misil_y)
        if colision:
            sonido_colision = mixer.Sound('golpe.mp3')
            sonido_colision.play()
            misil_y = 500
            misil_visible = False
            puntaje += 1
            enemigo_x[e] = random.randint(0, 736)
            enemigo_y[e] = random.randint(50, 200)
        
    # Funcion enemgo
        enemigo(enemigo_x[e], enemigo_y[e], e)
        
    # Movimiento de misil
    if misil_y <= -64:
        misil_y = 500
        misil_visible = False
    # Disparar misil
    if misil_visible:
        disparar_misil(misil_x, misil_y)
        misil_y -= misil_y_cambio

    # Funcion jugador
    jugador(jugador_x, jugador_y)
    
    mostrar_puntaje(texto_x, texto_y)
    
    # Actualiza pantalla para mostrar la config establecida
    pygame.display.update()
